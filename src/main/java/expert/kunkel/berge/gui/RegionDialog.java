/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RegionDialog.java
 *
 * Created on 16.02.2010, 15:58:30
 */
package expert.kunkel.berge.gui;

import java.io.File;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import com.vividsolutions.jts.geom.Polygon;

import expert.kunkel.ttqv.jaxb.Ttqv;
import expert.kunkel.berge.dao.DAOFactory;
import expert.kunkel.berge.dao.Punkt;
import expert.kunkel.berge.dao.PunktDAO;
import expert.kunkel.berge.dao.Region;
import expert.kunkel.berge.dao.RegionDAO;
import expert.kunkel.berge.util.TtqvUtilities;

/**
 *
 * @author thorsten
 */
public class RegionDialog extends javax.swing.JDialog {

	private static final long serialVersionUID = 4071235280129964495L;
	private Region region = null;
    private DefaultComboBoxModel cbModelOberregion = null;
    private DefaultComboBoxModel cbModelHoechster = null;
    private static DAOFactory factory = DAOFactory.getDAOFactory(DAOFactory.POSTGRESQL);
    private static RegionDAO regionDao = factory.getRegionDAO();
    private static PunktDAO punktDao = factory.getPunktDAO();

    /** Creates new form RegionDialog */
    public RegionDialog(java.awt.Frame parent, Region region) {
        super(parent, true);

        cbModelOberregion = new DefaultComboBoxModel();
        cbModelOberregion.addElement("");
        List<Region> regionen = regionDao.selectRegion();
        for (int i = 0; i < regionen.size(); i++) {
            Region region1 = regionen.get(i);
            cbModelOberregion.addElement(region1);
        }

        cbModelHoechster = new DefaultComboBoxModel();
        cbModelHoechster.addElement("");
        List<Punkt> punkte = punktDao.selectPunkt();
        for (int i = 0; i < punkte.size(); i++) {
            Punkt p = punkte.get(i);
            if (p.getTyp().getName().equals("Gipfel")) {
                cbModelHoechster.addElement(p);
            }
        }

        initComponents();

        if (region != null) {
            this.setData(region);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        tfUmgrenzung = new javax.swing.JTextField();
        cbHoechster = new javax.swing.JComboBox();
        cbOberregion = new javax.swing.JComboBox();
        tfAusdehnung = new javax.swing.JTextField();
        bOk = new javax.swing.JButton();
        bAbbrechen = new javax.swing.JButton();
        bOeffnen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Name");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText("Umgrenzung");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText("Höchster Punkt");
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText("Ausdehnung");
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText("Oberregion");
        jLabel5.setName("jLabel5"); // NOI18N

        tfName.setName("tfName"); // NOI18N

        tfUmgrenzung.setName("tfUmgrenzung"); // NOI18N

        cbHoechster.setModel(cbModelHoechster);
        cbHoechster.setName("cbHoechster"); // NOI18N

        cbOberregion.setModel(cbModelOberregion);
        cbOberregion.setName("cbOberregion"); // NOI18N

        tfAusdehnung.setEditable(false);
        tfAusdehnung.setName("tfAusdehnung"); // NOI18N

        bOk.setText("OK");
        bOk.setName("bOk"); // NOI18N
        bOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkActionPerformed(evt);
            }
        });

        bAbbrechen.setText("Abbrechen");
        bAbbrechen.setName("bAbbrechen"); // NOI18N
        bAbbrechen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAbbrechenActionPerformed(evt);
            }
        });

        bOeffnen.setText("Öffnen...");
        bOeffnen.setName("bOeffnen"); // NOI18N
        bOeffnen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOeffnenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 379, Short.MAX_VALUE)
                        .addComponent(bAbbrechen))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfUmgrenzung, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                            .addComponent(cbHoechster, 0, 434, Short.MAX_VALUE)
                            .addComponent(tfName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                            .addComponent(cbOberregion, 0, 434, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(tfAusdehnung, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bOeffnen)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfUmgrenzung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbHoechster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbOberregion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfAusdehnung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bOeffnen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bOk)
                    .addComponent(bAbbrechen))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAbbrechenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAbbrechenActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_bAbbrechenActionPerformed

    private void bOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkActionPerformed
        if (region != null) {
            region.setName(tfName.getText());
            region.setUmgrenzung(tfUmgrenzung.getText());
            if (cbHoechster.getSelectedItem() instanceof Punkt) {
                region.setHoechsterPunkt((Punkt) cbHoechster.getSelectedItem());
            }
            if (cbOberregion.getSelectedItem() instanceof Region) {
                region.setOberregion((Region) cbOberregion.getSelectedItem());
            }
            try {
                regionDao.updateRegion(region);
            } catch (SQLException ex) {
                Logger.getLogger(RegionDialog.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Fehler beim Speichern!", "Fehler", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegionDialog.class.getName()).log(Level.SEVERE, null, ex);
            }

            ((Berge) this.getParent()).reloadRegionen();
        }

        this.setVisible(false);
    }//GEN-LAST:event_bOkActionPerformed

    private void bOeffnenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOeffnenActionPerformed
        try {
            JFileChooser jfc = new JFileChooser(new File(Berge.FOLDER_REGION));
            jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            jfc.showOpenDialog(this);
            if (jfc.getSelectedFile() == null) {
                return;
            }
            File file = jfc.getSelectedFile();

            Ttqv ttqv = TtqvUtilities.readTTQV_XML(file.getAbsolutePath());

            Polygon polygon = TtqvUtilities.convertTtqvXML_ToPolygon(ttqv);

            tfAusdehnung.setText(polygon.toString());

            region.setExtent(polygon);
        } catch (Exception ex) {
            Logger.getLogger(KarteDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bOeffnenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                List<Region> regionen = regionDao.selectRegion(1);
                RegionDialog dialog = new RegionDialog(new javax.swing.JFrame(), regionen.get(0));
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAbbrechen;
    private javax.swing.JButton bOeffnen;
    private javax.swing.JButton bOk;
    private javax.swing.JComboBox cbHoechster;
    private javax.swing.JComboBox cbOberregion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField tfAusdehnung;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfUmgrenzung;
    // End of variables declaration//GEN-END:variables

    private void setData(Region region) {
        this.region = region;

        if (region != null) {
            tfName.setText(region.getName());
            tfUmgrenzung.setText(region.getUmgrenzung());
            if (region.getHoechsterPunkt() != null) {
                cbHoechster.setSelectedItem(region.getHoechsterPunkt());
            }
            if (region.getOberregion() != null) {
                cbOberregion.setSelectedItem(region.getOberregion());
            }
            if (region.getExtent() != null) {
                tfAusdehnung.setText(region.getExtent().toString());
            }
        }
    }
}
