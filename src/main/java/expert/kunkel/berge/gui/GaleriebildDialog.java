/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GaleriebildDialog.java
 *
 * Created on 09.02.2010, 16:09:16
 */
package expert.kunkel.berge.gui;

import expert.kunkel.berge.dao.DAOFactory;
import expert.kunkel.berge.dao.Galeriebild;
import expert.kunkel.berge.dao.GaleriebildDAO;
import expert.kunkel.berge.dao.Tour;
import expert.kunkel.berge.dao.TourDAO;
import expert.kunkel.berge.gui.model.GaleriebildTableModel;

import java.io.File;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author thorsten
 */
public class GaleriebildDialog extends javax.swing.JDialog {

	private static final long serialVersionUID = -2288352904578767707L;
	private Tour tour = null;
    private static DAOFactory factory = DAOFactory.getDAOFactory(DAOFactory.POSTGRESQL);
    private GaleriebildDAO bildDao = factory.getGaleriebildDAO();
    private GaleriebildTableModel bildTableModel = new GaleriebildTableModel();

    /** Creates new form GaleriebildDialog */
    public GaleriebildDialog(java.awt.Frame parent, Tour tour) {
        super(parent, true);

        initComponents();

        this.tour = tour;

        bildTable.getColumn(bildTableModel.getColumnName(0)).setPreferredWidth(100);
        bildTable.getColumn(bildTableModel.getColumnName(1)).setPreferredWidth(300);
        bildTable.getColumn(bildTableModel.getColumnName(2)).setPreferredWidth(40);
        bildTable.getColumn(bildTableModel.getColumnName(3)).setPreferredWidth(40);

        this.reloadGaleriebilder();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bildTable = new javax.swing.JTable();
        bOK = new javax.swing.JButton();
        bAbbrechen = new javax.swing.JButton();
        bHinzu = new javax.swing.JButton();
        bWeg = new javax.swing.JButton();
        bHoch = new javax.swing.JButton();
        bRunter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        bildTable.setModel(bildTableModel);
        bildTable.setName("bildTable"); // NOI18N
        bildTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(bildTable);

        bOK.setText("OK");
        bOK.setName("bOK"); // NOI18N
        bOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkActionPerformed(evt);
            }
        });

        bAbbrechen.setText("Abbrechen");
        bAbbrechen.setName("bAbbrechen"); // NOI18N
        bAbbrechen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAbbrechenActionPerformed(evt);
            }
        });

        bHinzu.setText("+");
        bHinzu.setName("bHinzu"); // NOI18N
        bHinzu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHinzuActionPerformed(evt);
            }
        });

        bWeg.setText("-");
        bWeg.setName("bWeg"); // NOI18N
        bWeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bWegActionPerformed(evt);
            }
        });

        bHoch.setText("Hoch");
        bHoch.setName("bHoch"); // NOI18N
        bHoch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHochActionPerformed(evt);
            }
        });

        bRunter.setText("Runter");
        bRunter.setName("bRunter"); // NOI18N
        bRunter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRunterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bRunter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bHinzu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bWeg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bHoch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bOK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 469, Short.MAX_VALUE)
                        .addComponent(bAbbrechen)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bHoch)
                        .addGap(73, 73, 73)
                        .addComponent(bHinzu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bWeg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bRunter))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bOK)
                    .addComponent(bAbbrechen))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkActionPerformed
        save();
        this.setVisible(false);
    }//GEN-LAST:event_bOkActionPerformed

    private void bAbbrechenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAbbrechenActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_bAbbrechenActionPerformed

    private void bHochActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHochActionPerformed
        int row = bildTable.getSelectedRow();

        if (row < 1) {
            return; // weiter hoch geht nicht
        }

        List<Galeriebild> bilder = bildTableModel.getData();
        Galeriebild oben = bilder.get(row - 1);
        Galeriebild unten = bilder.get(row);
        bilder.set(row, oben);
        bilder.set(row - 1, unten);
        bildTableModel.setData(bilder);
        bildTable.setRowSelectionInterval(row - 1, row - 1);
    }//GEN-LAST:event_bHochActionPerformed

    private void bRunterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRunterActionPerformed
        int row = bildTable.getSelectedRow();
        List<Galeriebild> bilder = bildTableModel.getData();

        if (row > bilder.size() - 2) {
            return; // weiter runter geht nicht
        }

        Galeriebild oben = bilder.get(row);
        Galeriebild unten = bilder.get(row + 1);
        bilder.set(row + 1, oben);
        bilder.set(row, unten);
        bildTableModel.setData(bilder);
        bildTable.setRowSelectionInterval(row + 1, row + 1);
    }//GEN-LAST:event_bRunterActionPerformed

    private void bWegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bWegActionPerformed
        int row = bildTable.getSelectedRow();

        if (row < 0) {
            return;
        }

        List<Galeriebild> bilder = bildTableModel.getData();

        bilder.remove(row);

        bildTableModel.setData(bilder);
    }//GEN-LAST:event_bWegActionPerformed

    private void bHinzuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHinzuActionPerformed
        JFileChooser jfc = new JFileChooser(new File(Berge.FOLDER_TOUREN));
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jfc.setMultiSelectionEnabled(true);
        jfc.showOpenDialog(this);
        if (jfc.getSelectedFiles() == null || jfc.getSelectedFiles().length == 0) {
            return;
        }

        List<Galeriebild> bilder = bildTableModel.getData();

        for (int i = 0; i < jfc.getSelectedFiles().length; i++) {
            File f = jfc.getSelectedFiles()[i];

            Galeriebild bild = new Galeriebild(tour);
            bild.setDateiname(f.getName());

            bilder.add(bild);
        }

        bildTableModel.setData(bilder);
    }//GEN-LAST:event_bHinzuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                TourDAO tourDao = factory.getTourDAO();
                List<Tour> touren = tourDao.selectTour(106, null);

                GaleriebildDialog dialog = new GaleriebildDialog(new javax.swing.JFrame(), touren.get(0));
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAbbrechen;
    private javax.swing.JButton bHinzu;
    private javax.swing.JButton bHoch;
    private javax.swing.JButton bOK;
    private javax.swing.JButton bRunter;
    private javax.swing.JButton bWeg;
    private javax.swing.JTable bildTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void save() {
        List<Galeriebild> bilder = bildTableModel.getData();
        try {
            bildDao.deleteGaleriebild(tour);

            for (int i = 0; i < bilder.size(); i++) {
                Galeriebild galeriebild = bilder.get(i);
                galeriebild.setSequenz(i+1);
                bildDao.insertGaleriebild(galeriebild);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GaleriebildDialog.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Fehler beim Speichern!", "Fehler", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GaleriebildDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void reloadGaleriebilder() {
        bildTableModel.setData(factory.getGaleriebildDAO().selectGaleriebild(tour));
    }
}
