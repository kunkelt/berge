/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TourDialog2.java
 *
 * Created on 13.01.2010, 00:03:55
 */
package expert.kunkel.berge.gui;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import expert.kunkel.berge.dao.DAOFactory;
import expert.kunkel.berge.dao.Karte;
import expert.kunkel.berge.dao.KarteDAO;
import expert.kunkel.berge.dao.Region;
import expert.kunkel.berge.dao.Tour;
import expert.kunkel.berge.dao.TourDAO;
import expert.kunkel.berge.dao.Tourentag;
import expert.kunkel.berge.dao.TourentagDAO;
import expert.kunkel.berge.gui.model.RegionComboBoxModel;

/**
 *
 * @author thorsten
 */
public class TourDialog extends javax.swing.JDialog {

	private static final long serialVersionUID = -3064664629372558781L;
	private SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
    private DAOFactory factory = DAOFactory.getDAOFactory(DAOFactory.POSTGRESQL);
    private KarteDAO karteDao = factory.getKarteDAO();
    private DefaultComboBoxModel regionCbModel = null;
    private Tour tour = null;
    private boolean isNewTour = true;

    /** Creates new form TourDialog2 */
    public TourDialog(java.awt.Frame parent, Tour tour) {
        super(parent, true);

        regionCbModel = new RegionComboBoxModel();

        initComponents();

        this.tfBeginn.setDocument(new DocumentDate());
        this.tfEnde.setDocument(new DocumentDate());

        if (tour != null) {
            isNewTour = false;
            try {
                this.setData(tour);
            } catch (SQLException ex) {
                Logger.getLogger(TourDialog.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TourDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        this.tfBeginn.setEditable(isNewTour);
        this.tfEnde.setEditable(isNewTour);
        this.cbRegion.setEnabled(isNewTour);

        this.lblTourentag.setVisible(!isNewTour);
        this.cbTourentag.setVisible(!isNewTour);
        this.bTtagBearbeiten.setVisible(!isNewTour);

        List<Karte> karten = karteDao.selectKarte();
        listKarten.setListData(karten.toArray());

        if (!isNewTour) {
            List<Tourentag> ttage;
            try {
                ttage = tour.getTourentage();

                for (Iterator<Tourentag> it = ttage.iterator(); it.hasNext();) {
                    Tourentag ttag = it.next();
                    cbTourentag.addItem(ttag);
                }
            } catch (SQLException ex) {
                Logger.getLogger(TourDialog.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TourDialog.class.getName()).log(Level.SEVERE, null, ex);
            }

            // Karten selektieren
            List<Karte> kartenAuswahl = tour.getKarten();
            for (Iterator<Karte> it = kartenAuswahl.iterator(); it.hasNext();) {
                Karte karte = it.next();
                int i = karten.indexOf(karte);
                listKarten.addSelectionInterval(i, i);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfBeginn = new javax.swing.JTextField();
        tfEnde = new javax.swing.JTextField();
        tfName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taBeschreibung = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        cbRegion = new javax.swing.JComboBox();
        bOK = new javax.swing.JButton();
        bAbbrechen = new javax.swing.JButton();
        lblTourentag = new javax.swing.JLabel();
        cbTourentag = new javax.swing.JComboBox();
        bTtagBearbeiten = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listKarten = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        tfLink = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        taZusatzinfo = new javax.swing.JTextArea();
        bBildergalerie = new javax.swing.JButton();
        cbGeplant = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Touren erfassen");
        setLocationByPlatform(true);

        jLabel1.setText("Beginn");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText("Ende");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText("Name");
        jLabel3.setName("jLabel3"); // NOI18N

        tfBeginn.setName("tfBeginn"); // NOI18N

        tfEnde.setName("tfEnde"); // NOI18N

        tfName.setName("tfName"); // NOI18N

        jLabel4.setText("Beschreibung");
        jLabel4.setName("jLabel4"); // NOI18N

        jScrollPane1.setName("taBeschreibung"); // NOI18N

        taBeschreibung.setColumns(20);
        taBeschreibung.setRows(5);
        taBeschreibung.setName("taBeschreibung"); // NOI18N
        jScrollPane1.setViewportView(taBeschreibung);

        jLabel5.setText("Region");
        jLabel5.setName("jLabel5"); // NOI18N

        cbRegion.setModel(regionCbModel);
        cbRegion.setName("cbRegion"); // NOI18N

        bOK.setText("OK");
        bOK.setName("bOK"); // NOI18N
        bOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOKActionPerformed(evt);
            }
        });

        bAbbrechen.setText("Abbrechen");
        bAbbrechen.setName("bAbbrechen"); // NOI18N
        bAbbrechen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAbbrechenActionPerformed(evt);
            }
        });

        lblTourentag.setText("Tourentag");
        lblTourentag.setName("lblTourentag"); // NOI18N

        cbTourentag.setName("cbTourentag"); // NOI18N

        bTtagBearbeiten.setText("Bearbeiten...");
        bTtagBearbeiten.setName("bTtagBearbeiten"); // NOI18N
        bTtagBearbeiten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tourentagBearbeitenActionPerformed(evt);
            }
        });

        jLabel6.setText("Karten");
        jLabel6.setName("jLabel6"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        listKarten.setName("listKarten"); // NOI18N
        jScrollPane2.setViewportView(listKarten);

        jLabel7.setText("Link");
        jLabel7.setName("jLabel7"); // NOI18N

        tfLink.setName("tfLink"); // NOI18N

        jLabel8.setText("Zusatzinfo");
        jLabel8.setName("jLabel8"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        taZusatzinfo.setColumns(20);
        taZusatzinfo.setRows(5);
        taZusatzinfo.setName("taZusatzinfo"); // NOI18N
        jScrollPane3.setViewportView(taZusatzinfo);

        bBildergalerie.setText("Bildergalerie");
        bBildergalerie.setName("bBildergalerie"); // NOI18N
        bBildergalerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBildergalerieActionPerformed(evt);
            }
        });

        cbGeplant.setText("Geplant");
        cbGeplant.setName("cbGeplant"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bOK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                        .addComponent(bBildergalerie)
                        .addGap(144, 144, 144)
                        .addComponent(bAbbrechen))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfName, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfBeginn, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfEnde, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                                .addComponent(cbGeplant))
                            .addComponent(tfLink, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTourentag)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                            .addComponent(cbRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbTourentag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bTtagBearbeiten))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfBeginn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbGeplant))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfEnde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfLink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTourentag)
                    .addComponent(cbTourentag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bTtagBearbeiten))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAbbrechen)
                    .addComponent(bOK)
                    .addComponent(bBildergalerie))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOKActionPerformed
        Date dBeginn = null;
        Date dEnde = null;
        try {
            dBeginn = sdf.parse(tfBeginn.getText());
            if (tfEnde.getText() == null || tfEnde.getText().equals("")) {
                dEnde = dBeginn;
            } else {
                dEnde = sdf.parse(tfEnde.getText());
            }
        } catch (ParseException ex) {
            Logger.getLogger(TourDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (dBeginn == null || cbRegion.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Beginn und Region müssen gefüllt sein!");
            return;
        }

        if (dEnde.compareTo(dBeginn) < 0) {
            JOptionPane.showMessageDialog(this, "Beginn liegt nach dem Ende!");
            return;
        }

        // Anlegen der Tour selbst
        if (isNewTour) { // neue Tour einfügen
            tour = new Tour();
            tour.setName(tfName.getText());
            tour.setBeschreibung(taBeschreibung.getText());
            tour.setLink(tfLink.getText());
            tour.setZusatzinfo(taZusatzinfo.getText());
            tour.setKarten(listKarten.getSelectedValues());
            tour.setGeplant(cbGeplant.isSelected());
            TourDAO tourDao = factory.getTourDAO();
            try {
                tourDao.insertTour(tour);
            } catch (SQLException ex) {
                Logger.getLogger(TourDialog.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Fehler beim Speichern!", "Fehler", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TourDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else { // bestehende Tour aktualisieren
            tour.setName(tfName.getText());
            tour.setBeschreibung(taBeschreibung.getText());
            tour.setLink(tfLink.getText());
            tour.setZusatzinfo(taZusatzinfo.getText());
            tour.setKarten(listKarten.getSelectedValues());
            tour.setGeplant(cbGeplant.isSelected());
            TourDAO tourDao = factory.getTourDAO();
            try {
                tourDao.updateTour(tour);
            } catch (SQLException ex) {
                Logger.getLogger(TourDialog.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Fehler beim Speichern!", "Fehler", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TourDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        // jetzt noch die Tourentage einfügen
        if (isNewTour) { // für eine neue Tour
            long tage = (dEnde.getTime() - dBeginn.getTime()) / 1000 / 3600 / 24 + 1;
            long beginnMillis = dBeginn.getTime();

            for (int i = 0; i < tage; i++) {
                Tourentag tt = new Tourentag(tour);
                tt.setRegion((Region) cbRegion.getSelectedItem());
                tt.setTag(i + 1);
                tt.setDate(new java.sql.Date(beginnMillis + 1000 * 3600 * 24 * i));

                TourentagDAO ttDao = factory.getTourentagDAO();
                try {
                    ttDao.insertTourentag(tt);
                } catch (SQLException ex) {
                    Logger.getLogger(TourDialog.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(TourDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        this.setVisible(false);
        ((Berge) this.getParent()).reloadTouren();
    }//GEN-LAST:event_bOKActionPerformed

    private void bAbbrechenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAbbrechenActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_bAbbrechenActionPerformed

    private void tourentagBearbeitenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tourentagBearbeitenActionPerformed
        Tourentag ttag = (Tourentag) cbTourentag.getSelectedItem();
        TourentagDialog ttagDialog = new TourentagDialog((JFrame) this.getParent(), ttag);
        ttagDialog.setVisible(true);
    }//GEN-LAST:event_tourentagBearbeitenActionPerformed

    private void bBildergalerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBildergalerieActionPerformed
        GaleriebildDialog bildDialog = new GaleriebildDialog((JFrame)this.getParent(), tour);
        bildDialog.setVisible(true);
    }//GEN-LAST:event_bBildergalerieActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DAOFactory factory = DAOFactory.getDAOFactory(DAOFactory.POSTGRESQL);
                TourDAO tourDao = factory.getTourDAO();
                List<Tour> touren = tourDao.selectTour(1, null);
                TourDialog dialog = new TourDialog(new javax.swing.JFrame(), touren.get(0));
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAbbrechen;
    private javax.swing.JButton bBildergalerie;
    private javax.swing.JButton bOK;
    private javax.swing.JButton bTtagBearbeiten;
    private javax.swing.JCheckBox cbGeplant;
    private javax.swing.JComboBox cbRegion;
    private javax.swing.JComboBox cbTourentag;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblTourentag;
    private javax.swing.JList listKarten;
    private javax.swing.JTextArea taBeschreibung;
    private javax.swing.JTextArea taZusatzinfo;
    private javax.swing.JTextField tfBeginn;
    private javax.swing.JTextField tfEnde;
    private javax.swing.JTextField tfLink;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables

    private void setData(Tour tour) throws SQLException, ClassNotFoundException {
        this.tour = tour;

        if (tour != null) {
            List<Tourentag> tourentage = tour.getTourentage();
            tfBeginn.setText(sdf.format(tourentage.get(0).getDate()));
            tfEnde.setText(sdf.format(tourentage.get(tourentage.size() - 1).getDate()));
            tfName.setText(tour.getName());
            tfLink.setText(tour.getLink());
            taZusatzinfo.setText(tour.getZusatzinfo());
            taBeschreibung.setText(tour.getBeschreibung());
            cbGeplant.setSelected(tour.isGeplant());
            cbRegion.getModel().setSelectedItem(tourentage.get(0).getRegion());
        }
    }
}
